apiVersion: v1
kind: Service
metadata:
  name: moprs
  labels:
    app: moprs
spec:
  ports:
  - port: 8080
    name: moprs
  clusterIP: None
  selector:
    app: moprs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moprs
spec:
  selector:
    matchLabels:
      app: moprs
  replicas: 3
  revisionHistoryLimit: 1
  minReadySeconds: 10
  template:
    metadata:
      labels:
        app: moprs
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: moprs
        image: ghcr.io/malaud/moprs:master
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: moprs
        resources:
            requests:
              memory: "50Mi"
              cpu: "100m"
            limits:
              memory: "150Mi"
              cpu: "500m"
        env:
        - name: S3_URL
          value: "http://minio:9000"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: moprs
              key: minioUser
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: moprs
              key: minioPassword
        - name: ARL
          valueFrom:
            secretKeyRef:
              name: moprs
              key: arl
        - name: RUST_LOG
          value: "debug"
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: mongo-admin-malaury
              key: connectionString.standard
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: moprs
              key: redisPassword
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          failureThreshold: 30
          periodSeconds: 10